<?php

namespace App\Controller\Config;

use App\Entity\Config\Program;
use App\EntityHandler\Config\ProgramEntityHandler;
use App\Form\Config\ProgramType;
use CrosierSource\CrosierLibBaseBundle\Controller\FormListController;
use CrosierSource\CrosierLibBaseBundle\EntityHandler\EntityHandler;
use CrosierSource\CrosierLibBaseBundle\Utils\RepositoryUtils\FilterData;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

/**
 * Class ProgramController.
 *
 * @package App\Controller\Config
 * @author Carlos Eduardo Pauluk
 */
class ProgramController extends FormListController
{

    /** @var ProgramEntityHandler */
    private $entityHandler;

    /**
     * @required
     * @param ProgramEntityHandler $entityHandler
     */
    public function setEntityHandler(ProgramEntityHandler $entityHandler): void
    {
        $this->entityHandler = $entityHandler;
    }

    public function getEntityHandler(): ?EntityHandler
    {
        return $this->entityHandler;
    }

    public function getFormRoute()
    {
        return 'cfg_program_form';
    }

    public function getFormView()
    {
        return 'Config/programForm.html.twig';
    }

    public function getFilterDatas($params)
    {
        return array(
            new FilterData('descricao', 'LIKE', isset($params['filter']['descricao']) ? $params['filter']['descricao'] : null),
            new FilterData('a.nome', 'LIKE', isset($params['filter']['app']) ? $params['filter']['app'] :  null)
        );
    }

    public function getListView()
    {
        return 'Config/programList.html.twig';
    }

    public function getListRoute()
    {
        return 'cfg_program_list';
    }

    public function getListRouteAjax()
    {
        return 'cfg_program_datatablesJsList';
    }


    public function getTypeClass()
    {
        return ProgramType::class;
    }

    /**
     *
     * @Route("/cfg/program/form/{id}", name="cfg_program_form", defaults={"id"=null}, requirements={"id"="\d+"})
     * @param Request $request
     * @param Program|null $program
     * @return \Symfony\Component\HttpFoundation\RedirectResponse|\Symfony\Component\HttpFoundation\Response
     * @throws \Exception
     */
    public function form(Request $request, Program $program = null)
    {
        return $this->doForm($request, $program);
    }

    /**
     *
     * @Route("/cfg/program/list/", name="cfg_program_list")
     * @param Request $request
     * @return \Symfony\Component\HttpFoundation\Response
     * @throws \Exception
     */
    public function list(Request $request)
    {
        return $this->doList($request);
    }

    /**
     * @return array|mixed
     */
    public function getNormalizeAttributes()
    {
        return array(
            'attributes' => array(
                'id',
                'descricao',
                'url',
                'app' => ['nome']
            )
        );
    }

    /**
     *
     * @Route("/cfg/program/datatablesJsList/", name="cfg_program_datatablesJsList")
     * @param Request $request
     * @return Response
     * @throws \CrosierSource\CrosierLibBaseBundle\Exception\ViewException
     */
    public function datatablesJsList(Request $request)
    {
        $jsonResponse = $this->doDatatablesJsList($request);
        return $jsonResponse;
    }

    /**
     *
     * @Route("/cfg/program/delete/{id}/", name="cfg_program_delete", requirements={"id"="\d+"})
     * @param Request $request
     * @param Program $program
     * @return \Symfony\Component\HttpFoundation\RedirectResponse
     */
    public function delete(Request $request, Program $id)
    {
        return $this->doDelete($request, $id);
    }

    public function getListPageTitle()
    {
        return 'Programas'; // TODO: Change the autogenerated stub
    }

    public function getFormPageTitle()
    {
        return 'Programa'; // TODO: Change the autogenerated stub
    }


}