<?php

namespace App\Entity\{{ pacote }};

use ApiPlatform\Core\Annotation\ApiFilter;
use ApiPlatform\Core\Annotation\ApiResource;
use ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter;
use ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter;
use CrosierSource\CrosierLibBaseBundle\Doctrine\Annotations\NotUppercase;
use CrosierSource\CrosierLibBaseBundle\Doctrine\Annotations\EntityHandler;
use CrosierSource\CrosierLibBaseBundle\Entity\EntityId;
use CrosierSource\CrosierLibBaseBundle\Entity\EntityIdTrait;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Serializer\Annotation\Groups;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * ApiResource(
 *     normalizationContext={"groups"={"entity","entityId"}},
 *     denormalizationContext={"groups"={"entity"}},
 *
 *     itemOperations={
 *          "get"={"path"="/{{ pacote|lower }}/{{ nomeDoRecurso }}/{id}", "access_control"="is_granted('{{ role }}')"},
 *          "put"={"path"="/{{ pacote|lower }}/{{ nomeDoRecurso }}/{id}", "access_control"="is_granted('{{ role }}')"},
 *          "delete"={"path"="/{{ pacote|lower }}/{{ nomeDoRecurso }}/{id}", "access_control"="is_granted('ROLE_ADMIN')"}
 *     },
 *     collectionOperations={
 *          "get"={"path"="/{{ pacote|lower }}/{{ nomeDoRecurso }}", "access_control"="is_granted('{{ role }}')"},
 *          "post"={"path"="/{{ pacote|lower }}/{{ nomeDoRecurso }}", "access_control"="is_granted('{{ role }}')"}
 *     },
 *
 *     attributes={
 *          "pagination_items_per_page"=10,
 *          "formats"={"jsonld", "csv"={"text/csv"}}
 *     }
 *
 * )
 * 
 * @ApiFilter(OrderFilter::class, properties={"id", "updated"}, arguments={"orderParameterName"="order"})
 *
 * @ORM\Entity(repositoryClass="App\Repository\{{ pacote }}\{{ nomeDaClasse ~ 'Repository' }}")
 * @EntityHandler(entityHandlerClass="App\EntityHandler\{{ pacote }}\{{ nomeDaClasse ~ 'EntityHandler' }}")
 * @ORM\Table(name="{{ nomeTabela }}")
 *
 * @author Carlos Eduardo Pauluk
 */
class {{ nomeDaClasse }} implements EntityId
{

    use EntityIdTrait;

    {{ campos }}


}
